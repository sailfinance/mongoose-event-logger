<testsuites name="mongoose-event-logger">
<testsuite name="Events logging Document changes" tests="11" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:43 GMT" time="1.458">
<testcase classname="Events logging Document changes" name="should log complete deleted object when document is removed" time="0.243">
</testcase>
<testcase classname="Events logging Document changes" name="should log complete created object when document is created" time="0.107">
</testcase>
<testcase classname="Events logging Document changes" name="should not log an event when no document fields were updated" time="0.106">
</testcase>
<testcase classname="Events logging Document changes" name="should log only updated fields if scalar value has been updated" time="0.113">
</testcase>
<testcase classname="Events logging Document changes" name="should log only updated fields if scalar property has been unset" time="0.111">
</testcase>
<testcase classname="Events logging Document changes" name="should log only updated fields if removed one array item" time="0.111">
</testcase>
<testcase classname="Events logging Document changes" name="should log only updated fields if added one array item" time="0.112">
</testcase>
<testcase classname="Events logging Document changes" name="should log only updated fields if updated an array element" time="0.11">
</testcase>
<testcase classname="Events logging Document changes" name="should log only updated fields if completely replaced an array" time="0.119">
</testcase>
<testcase classname="Events logging Document changes" name="should not log if replaced array with the same array" time="0.11">
</testcase>
<testcase classname="Events logging Document changes" name="should log if replaced array with different array" time="0.108">
</testcase>
</testsuite>
<testsuite name="Events logging Document changes using findOneAndUpdate" tests="3" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:45 GMT" time="0.503">
<testcase classname="Events logging Document changes using findOneAndUpdate" name="should log object snapshot if created using findOneAndUpdate without new doc" time="0.195">
</testcase>
<testcase classname="Events logging Document changes using findOneAndUpdate" name="should log object snapshot if created using findOneAndUpdate" time="0.133">
</testcase>
<testcase classname="Events logging Document changes using findOneAndUpdate" name="should log object delta if updated using findOneAndUpdate" time="0.147">
</testcase>
</testsuite>
<testsuite name="Events logging Logging options" tests="1" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:45 GMT" time="0.086">
<testcase classname="Events logging Logging options" name="should set logging options" time="0.066">
</testcase>
</testsuite>
<testsuite name="Events logging with log behaviour [delta]" tests="2" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:45 GMT" time="0.333">
<testcase classname="Events logging with log behaviour [delta]" name="should not log when only skipped properties are changed" time="0.111">
</testcase>
<testcase classname="Events logging with log behaviour [delta]" name="should log all properties that are changed including skipped if at least one non-skipped property was changed" time="0.114">
</testcase>
</testsuite>
<testsuite name="Events logging with log behaviour [snapshot]" tests="8" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:46 GMT" time="1.234">
<testcase classname="Events logging with log behaviour [snapshot]" name="should not log when only skipped properties are changed" time="0.107">
</testcase>
<testcase classname="Events logging with log behaviour [snapshot]" name="should log object snapshot if at least one non-skipped property was changed" time="0.114">
</testcase>
<testcase classname="Events logging with log behaviour [snapshot]" name="should not log when only skipped properties are changed" time="0.106">
</testcase>
<testcase classname="Events logging with log behaviour [snapshot]" name="should log object snapshot if at least one non-skipped property was changed" time="0.118">
</testcase>
<testcase classname="Events logging with log behaviour [snapshot]" name="should log object snapshot when it was deleted" time="0.116">
</testcase>
<testcase classname="Events logging with log behaviour [snapshot]" name="should log object snapshot when it is created" time="0.111">
</testcase>
<testcase classname="Events logging with log behaviour [snapshot]" name="should log object snapshot if created using findOneAndUpdate" time="0.147">
</testcase>
<testcase classname="Events logging with log behaviour [snapshot]" name="should log object snapshot if updated using findOneAndUpdate" time="0.179">
</testcase>
</testsuite>
<testsuite name="Events logging with log behaviour [snapshotAndDelta]" tests="3" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:47 GMT" time="0.469">
<testcase classname="Events logging with log behaviour [snapshotAndDelta]" name="should not log when only skipped properties are changed" time="0.105">
</testcase>
<testcase classname="Events logging with log behaviour [snapshotAndDelta]" name="should log object snapshot and delta if at least one non-skipped property was changed" time="0.111">
</testcase>
<testcase classname="Events logging with log behaviour [snapshotAndDelta]" name="should log object delta if updated using findOneAndUpdate" time="0.135">
</testcase>
</testsuite>
<testsuite name="Events logging with log behaviour [id]" tests="5" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:47 GMT" time="0.713">
<testcase classname="Events logging with log behaviour [id]" name="should not log when only skipped properties are changed" time="0.107">
</testcase>
<testcase classname="Events logging with log behaviour [id]" name="should log object id if at least one non-skipped property was changed" time="0.109">
</testcase>
<testcase classname="Events logging with log behaviour [id]" name="should only log object id when the document was deleted" time="0.113">
</testcase>
<testcase classname="Events logging with log behaviour [id]" name="should only log object id when it is created" time="0.102">
</testcase>
<testcase classname="Events logging with log behaviour [id]" name="should log object id if updated using findOneAndUpdate" time="0.137">
</testcase>
</testsuite>
<testsuite name="Events logging with object type prefix" tests="2" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:48 GMT" time="0.294">
<testcase classname="Events logging with object type prefix" name="should use prefix set when applying plugin" time="0.168">
</testcase>
<testcase classname="Events logging with object type prefix" name="should use prefix set on the document level" time="0.105">
</testcase>
</testsuite>
<testsuite name="Model functions Creating" tests="1" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:48 GMT" time="0.093">
<testcase classname="Model functions Creating" name="should create a document" time="0.081">
</testcase>
</testsuite>
<testsuite name="Model functions Fetching" tests="5" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:48 GMT" time="0.175">
<testcase classname="Model functions Fetching" name="should fetch a document with findById" time="0.067">
</testcase>
<testcase classname="Model functions Fetching" name="should fetch the document with findOne" time="0.006">
</testcase>
<testcase classname="Model functions Fetching" name="should fetch the document with find" time="0.006">
</testcase>
<testcase classname="Model functions Fetching" name="should fetch the document with population" time="0.045">
</testcase>
<testcase classname="Model functions Fetching" name="should fetch document with deep population" time="0.042">
</testcase>
</testsuite>
<testsuite name="Model functions Removing" tests="1" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:49 GMT" time="0.075">
<testcase classname="Model functions Removing" name="should remove a document" time="0.068">
</testcase>
</testsuite>
<testsuite name="Caller logging Creating" tests="2" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:49 GMT" time="0.071">
<testcase classname="Caller logging Creating" name="should set caller to the document being saved" time="0.062">
</testcase>
<testcase classname="Caller logging Creating" name="should set caller to the saved document" time="0.003">
</testcase>
</testsuite>
<testsuite name="Caller logging Removing" tests="1" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:49 GMT" time="0.13">
<testcase classname="Caller logging Removing" name="should set caller to the document being removed" time="0.121">
</testcase>
</testsuite>
<testsuite name="Logger mongoose plugin getDelta for objects containing only scalars" tests="6" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:49 GMT" time="0.014">
<testcase classname="Logger mongoose plugin getDelta for objects containing only scalars" name="should return empty result for the same objects">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing only scalars" name="should return empty result for cloned objects">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing only scalars" name="should return empty result for identical objects">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing only scalars" name="should return property that has been changed and it&#39;s new value" time="0.001">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing only scalars" name="should return property that has been added and it&#39;s value">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing only scalars" name="should return property that has been deleted with a flag &#39;$DELETED&#39; as it&#39;s name and in __deletedKeys array">
</testcase>
</testsuite>
<testsuite name="Logger mongoose plugin getDelta for objects containing arrays" tests="7" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:49 GMT" time="0.013">
<testcase classname="Logger mongoose plugin getDelta for objects containing arrays" name="should return empty result for the same objects">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing arrays" name="should return empty result for cloned objects">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing arrays" name="should return empty result for identical objects">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing arrays" name="if modified an array element should return array property that has been changed and it&#39;s new value">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing arrays" name="if modified a subarray element should return array property that has been changed and it&#39;s new value">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing arrays" name="should return property that has been added and it&#39;s value" time="0.001">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing arrays" name="should return property that has been deleted with a flag &#39;$DELETED&#39; as it&#39;s name and in __deletedKeys array">
</testcase>
</testsuite>
<testsuite name="Logger mongoose plugin getDelta for objects containing other objects" tests="6" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:49 GMT" time="0.008">
<testcase classname="Logger mongoose plugin getDelta for objects containing other objects" name="should return empty result for the same objects">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing other objects" name="should return empty result for cloned objects">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing other objects" name="should return empty result for identical objects" time="0.001">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing other objects" name="if modified an array element of subproperty should return array subproperty that has been changed and it&#39;s new value">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing other objects" name="should return sub property that has been deleted with a flag &#39;$DELETED&#39; as it&#39;s name and in __deletedKeys array">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing other objects" name="if modified a subarray element of subproperty should return array sub property that has been changed and it&#39;s new value" time="0.001">
</testcase>
</testsuite>
<testsuite name="Logger mongoose plugin getDelta for objects containing ObjectIds" tests="6" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:49 GMT" time="0.009">
<testcase classname="Logger mongoose plugin getDelta for objects containing ObjectIds" name="should return empty result for the same objects">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing ObjectIds" name="should return empty result for cloned objects" time="0.001">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing ObjectIds" name="should return empty result for identical objects">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing ObjectIds" name="should return property that has been changed and it&#39;s new value" time="0.001">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing ObjectIds" name="should return property that has been added and it&#39;s value">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for objects containing ObjectIds" name="should return property that has been deleted with a flag &#39;$DELETED&#39; as it&#39;s name and in __deletedKeys array">
</testcase>
</testsuite>
<testsuite name="Logger mongoose plugin getDelta for mongoose models" tests="5" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:49 GMT" time="0.085">
<testcase classname="Logger mongoose plugin getDelta for mongoose models" name="should return empty result for the same objects">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for mongoose models" name="should return empty result for identical objects" time="0.001">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for mongoose models" name="should return property that has been changed and it&#39;s new value" time="0.076">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for mongoose models" name="should return property that has been added and it&#39;s value" time="0.001">
</testcase>
<testcase classname="Logger mongoose plugin getDelta for mongoose models" name="should return property that has been deleted with a flag &#39;$DELETED&#39; as it&#39;s name and in __deletedKeys array">
</testcase>
</testsuite>
<testsuite name="Logger mongoose plugin getDelta diff options" tests="1" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:49 GMT" time="0.008">
<testcase classname="Logger mongoose plugin getDelta diff options" name="should not return skipped path if it is changed">
</testcase>
</testsuite>
<testsuite name="Logger configuration" tests="3" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:49 GMT" time="0.016">
<testcase classname="Logger configuration" name="should throw error when initalised without configuration" time="0.004">
</testcase>
<testcase classname="Logger configuration" name="should throw error when used without configuration" time="0.006">
</testcase>
<testcase classname="Logger configuration" name="should throw error when set empty configuration">
</testcase>
</testsuite>
<testsuite name="Logger reconfiguration" tests="1" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:49 GMT" time="0.248">
<testcase classname="Logger reconfiguration" name="should not loose events during reconfiguration" time="0.239">
</testcase>
</testsuite>
<testsuite name="Logger stopping" tests="1" failures="0" skipped="0" timestamp="Wed, 14 Mar 2018 00:48:49 GMT" time="0.219">
<testcase classname="Logger stopping" name="should not loose events during stopping" time="0.207">
</testcase>
</testsuite>
</testsuites>
